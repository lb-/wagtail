{
  "rules": {
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "classes": {
          "memberTypes": ["constructor", "field", "method", "signature"]
        }
      }
    ],
    "lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ]
  },
  "overrides": [
    {
      "files": ["*-controller.ts"],
      "excludedFiles": ["abstract-controller.ts"],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "method",
            "format": ["camelCase"],
            "custom": {
              // Use connect or initialize instead of constructor, avoid generic 'render' or 'update' methods and instead be more specific.
              "regex": "^(constructor|render|update)$",
              "match": false
            }
          },
          {
            "selector": "property",
            "format": ["camelCase"],
            "custom": {
              // Use Stimulus values where possible for internal state, avoid a generic state object.
              "regex": "^(state)$",
              "match": false
            }
          }
        ],
        "no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "@hotwired/stimulus",
                "importNames": ["Controller"],
                "message": "Import and extend the `AbstractController from './abstract-controller'`."
              }
            ]
          }
        ]
      }
    }
  ]
}
